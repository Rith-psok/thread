version: '3.8'
services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    container_name: postgres_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - cluster.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx2048m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres

      KC_HOSTNAME: 172.20.224.1
      KC_HOSTNAME_PORT: 8070
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - db
    ports:
      - 8070:8080

  eureka-server:
    image: ${EUREKA_REGISTRY_IMAGE}:${EUREKA_IMAGE_VERSION}
    container_name: rms-eureka-server
    healthcheck:
      test: curl -f http://${DISCOVERY_HOST}:${DISCOVERY_PORT}/actuator/health
      interval: 30s
      timeout: 20s
      start_period: 30s
      retries: 5
    restart: always
    ports:
      - ${DISCOVERY_PORT}:${DISCOVERY_PORT}
    volumes:
      - ./../../.env:/app/.env

  aw-server-config:
    image: ${SERVER_CONFIG_REGISTRY_IMAGE}:${SERVER_CONFIG_IMAGE_VERSION}
    container_name: rms-server-config
    restart: always
    healthcheck:
      test: curl -f http://${DISCOVERY_HOST}:${SERVER_CONFIG_PORT}/actuator/health
      interval: 20s
      timeout: 20s
      start_period: 30s
      retries: 5
    depends_on:
      eureka-server:
        condition: service_healthy
    ports:
      - ${SERVER_CONFIG_PORT}:${SERVER_CONFIG_PORT}
    volumes:
      - ./../../.env:/app/.env

  aw-rms-gateway:
    image: ${SERVICE_GATEWAY_REGISTRY_IMAGE}:${SERVICE_GATEWAY_IMAGE_VERSION}
    container_name: rms-gateway
    restart: on-failure
    depends_on:
      aw-server-config:
        condition: service_healthy
    ports:
      - ${SERVICE_GATEWAY_SERVER_PORT}:${SERVICE_GATEWAY_SERVER_PORT}
    volumes:
      - ./../../.env:/app/.env

  connector:
    image: ${FILE_MANAGER_REGISTRY_IMAGE}:${FILE_MANAGER_IMAGE_VERSION}
    container_name: elfinder-connector
    restart: on-failure
    depends_on:
      eureka-server:
        condition: service_healthy
      aw-server-config:
        condition: service_healthy
    ports:
      - ${SERVICE_SERVER_PORT}:${SERVICE_SERVER_PORT}
    volumes:
      - ./../../.env:/app/.env

  service:
    image: ${API_REGISTRY_IMAGE}:${API_IMAGE_VERSION}
    container_name: service
    restart: on-failure
    depends_on:
      eureka-server:
        condition: service_healthy
      aw-server-config:
        condition: service_healthy
    ports:
      - ${SERVICE_SERVER_PORT}:${SERVICE_SERVER_PORT}
    volumes:
      - ./../../.env:/app/.env

volumes:
  postgres_data:
  esdata01:
    driver: local
